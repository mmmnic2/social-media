#spring.application.name=socialmedia

# MySQL properties Local
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3306/socialmedia?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=cmycxcdbc
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
##spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

#Deploy SQL
spring.datasource.url=${JDBC_DATABASE_URL:}?createDatabaseIfNotExist=true
spring.datasource.username=${JDBC_USERNAME:}
spring.datasource.password=${JDBC_PASSWORD:}
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false



#App properties
security.jwt.secrect=${JWT_SECRET_KEY:}
security.jwt.expirationTime=${JWT_EXPIRATION_TIME:}
#security.jwt.expirationTime=60000
security.jwt.refresh-token.re-expiration=${JWT_REFRESH_EXPIRATION_TIME:}

#Cloudinary properties
cloudinary.cloud_name=${CLOUDINARY_NAME:}
cloudinary.api_key=${CLOUDINARY_API_KEY:}
cloudinary.api_secret=${CLOUDINARY_API_SECRET:}

# Config upload file
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Cau hinh OAuth2 cho Google
spring.security.oauth2.client.registration.google.client-id=${OAUTH2_GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH2_GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.redirect-uri=${OAUTH2_GOOGLE_REDIRECT_URI:}
# Scope (quyen truy cap)
spring.security.oauth2.client.registration.google.scope=profile,email
